name: Build and Test
on:
  - pull_request
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  DOCKER_BUILDKIT: 1
  REPOSITORY: github-actions-demo

jobs:
  build:
    name: build / Docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install cURL Headers
        run: sudo apt-get update && sudo apt-get install -y libcurl4-openssl-dev

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-1

      - uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr

      - name: Pull Docker image
        id: pull
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ hashFiles('Dockerfile') }}
        run: |
          if docker pull ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}; then
            echo "Image pulled successfully!"
          else
            echo "Image not found, need to build."
            echo "BUILD_NEEDED=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Build and push Docker image
        if: steps.pull.outputs.BUILD_NEEDED == 'true'
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ hashFiles('Dockerfile') }}
        run: |
          docker build . --tag ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
