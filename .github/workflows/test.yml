name: Build and Test
on:
  - pull_request
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  DOCKER_BUILDKIT: 1

jobs:
  build:
    name: build / Docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install cURL Headers
        run: sudo apt-get update && sudo apt-get install -y libcurl4-openssl-dev

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-1

      - uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr

      - name: Calculate Docker Image Tag
        run: echo "IMAGE_TAG=$(echo $(hashFiles('Dockerfile')))" >> $GITHUB_ENV

      - run: echo $IMAGE_TAG

      - name: build and push docker image to ecr
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: github-actions-demo
          # IMAGE_TAG: ${{ hashFiles('Dockerfile') }}
        run: |
          docker build . --tag ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}

      # - name: Pull Docker image
      #   id: pull
      #   run: |
      #     if docker pull ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/my-image:latest; then
      #       echo "Image pulled successfully!"
      #     else
      #       echo "Image not found, need to build."
      #       echo "::set-output name=BUILD_NEEDED::true"

      # - name: Build and push Docker image
      #   if: steps.pull.outputs.BUILD_NEEDED == 'true'
      #   run: |
      #     docker build -t my-image .
      #     docker tag my-image:latest ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/my-image:latest
      #     docker push ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/my-image:latest
